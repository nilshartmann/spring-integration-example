<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
		http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.0.xsd">
	
	<context:component-scan base-package="nh.examples.springintegration.order.client" />

	<!--  =============================================================== -->
	<!--                        A C T I V E   M Q                         -->
	<!--  =============================================================== -->
	<!--  ConnectionFactory to ActiveMq -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61616"/>		
			</bean>
		</property>
		<property name="sessionCacheSize" value="10"/>
		<property name="cacheProducers" value="false"/>
	</bean>

	<!--  =============================================================== -->
	<!--                       J M S   A D A P T E R                      -->
	<!--  =============================================================== -->
	<!-- The requestQueue that contains commands that will be forwarded to a CommandHandler -->
	<bean id="commandBusQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="nh.examples.springintegration.order.commandRequests"/>
	</bean>

	<!-- A Topic to read Events from -->
	<bean id="eventTopic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="nh.examples.springintegration.order.eventTopic"/>
	</bean>	
	
	<bean id="queryQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="nh.examples.springintegration.order.orderQueries"/>
	</bean>
	<bean id="queryResultQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="nh.examples.springintegration.order.orderQueryResult"/>
	</bean>

	<!--  A Logging Channel for monitoring messages via the Log file -->
	<int:logging-channel-adapter id="loggerChannel" level="INFO" log-full-message="true"/>
	
	
	<!--  The message converter that converts JMS messages from XML to objects and vice versa -->
	<bean id="messageConverter" class="nh.examples.springintegration.order.utils.XmlJmsMessageConverter" />
	
	<!--  The JMS outbound channel adapter that forwards the commands to the JMS queue -->
	<int-jms:outbound-channel-adapter 
		channel="commandBusChannel" 
		message-converter="messageConverter" 
		destination="commandBusQueue"/>                

	<!--  =============================================================== -->
	<!--                        C O M M A N D   B U S                     -->
	<!--  =============================================================== -->
	
	<int:channel id="commandBusChannel">
		<int:interceptors>
       		<int:wire-tap channel="loggerChannel"/>
   		</int:interceptors>
	</int:channel>

	<int:gateway
		id="commandBus" 
		default-request-channel="commandBusChannel" 
		service-interface="nh.examples.springintegration.order.framework.domain.commands.CommandBus"/>


	<!--  =============================================================== -->
	<!--                            Q U E R I E S                         -->
	<!--  =============================================================== -->

	<int:channel id="queryChannel">
		<int:interceptors>
       		<int:wire-tap channel="loggerChannel"/>
   		</int:interceptors>
	</int:channel>
	<int:channel id="queryResultChannel">
		<int:queue/>
		 <int:interceptors>
       		<int:wire-tap channel="loggerChannel"/>
   		</int:interceptors>
	</int:channel>

	<int:gateway id="orderQueries"
		default-request-channel="queryChannel"
		default-reply-channel="queryResultChannel"
		service-interface="nh.examples.springintegration.order.queries.OrderQueries" >
	</int:gateway>

	<int-jms:outbound-gateway id="queryGateway" 
		request-channel="queryChannel"
		request-destination="queryQueue"
		reply-channel="queryResultChannel"
		reply-destination="queryResultQueue"
		message-converter="messageConverter"
	/>
	

		
	<!--  =============================================================== -->
	<!--                            E V E N T S                           -->
	<!--  =============================================================== -->
	<int-jms:message-driven-channel-adapter
		id="eventChannelAdapter" 
		channel="eventChannel"
		message-converter="messageConverter"
		destination="eventTopic" />
	
	<int:channel id="eventChannel">
		<int:dispatcher/>
		<int:interceptors>
       		<int:wire-tap channel="loggerChannel"/>
   		</int:interceptors>
	</int:channel>
	
	<bean id="clientEventListener" class="nh.examples.springintegration.order.client.ClientEventListener" />
	
	<int:service-activator id="clientEventListenerServiceActivator"
		input-channel="eventChannel"
		ref="clientEventListener" />

</beans>
