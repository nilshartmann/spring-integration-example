<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp"
	xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
	xsi:schemaLocation="http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi-2.0-m1.xsd
		http://www.springframework.org/schema/integration/ftp http://www.springframework.org/schema/integration/ftp/spring-integration-ftp-2.0.xsd
		http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-2.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!--  Configure beans from domain Package -->
	<context:component-scan base-package="nh.examples.springintegration.order.domain" />

	<!--  Enable Support for @Configurable -->	
	<context:spring-configured />
	<context:load-time-weaver weaver-class="org.eclipse.equinox.weaving.springweaver.EquinoxAspectsLoadTimeWeaver" aspectj-weaving="on" />	

	<!--  A Logging Channel for monitoring messages via the Log file -->
	<int:logging-channel-adapter id="logger" level="INFO" log-full-message="true"/>

	<osgi:service ref="orderRepository" interface="nh.examples.springintegration.order.domain.OrderRepository"/>

	<!--  =============================================================== -->
	<!--  ==            C O M M A N D    P R O C E S S I N G              -->
	<!--  =============================================================== -->
	<!--  The Channel for receiving Commands -->
	<int:channel id="commandChannel">
		<!--  Enable Logging -->
		<int:interceptors>
       		<int:wire-tap channel="logger" />
   		</int:interceptors>
	</int:channel>
	
	<!-- Forward Commands to CommandHandler bean -->
	<int:service-activator id="commandHandlerServiceActivator" 
		input-channel="commandChannel"
		ref="orderCommandHandler" 
	/>
	
	<!--  =============================================================== -->
	<!--  ==                  E V E N T   H A N D L I N G                 -->
	<!--  =============================================================== -->
	<!-- The EventStore stores the Events and forwards them to the eventPublisher -->
	<bean id="eventStore" class="nh.examples.springintegration.order.framework.eventstore.EventStore">
		<constructor-arg ref="eventPublisher" />
	</bean>

	<!-- The EventPublisher-Gateway that will push Events to the eventChannel -->
	<int:gateway id="eventPublisher"
		default-request-channel="eventChannelInternal" 
		service-interface="nh.examples.springintegration.order.framework.eventstore.EventPublisher" 
	/>
	
	<!--  The public channel that contains the events published by the EventPublisher -->
	<int:channel id="eventChannelInternal">
		<!--  Enable Logging -->
		<int:interceptors>
       		<int:wire-tap channel="logger" />
   		</int:interceptors>
	</int:channel>
	
	<int:header-enricher input-channel="eventChannelInternal" output-channel="eventChannel">
		<int:header name="eventName" expression="payload.eventName"/>
	</int:header-enricher>
	
	<int:publish-subscribe-channel id="eventChannel">
		<!--  Enable Logging -->
		<int:interceptors>
       		<int:wire-tap channel="logger" />
   		</int:interceptors>
	</int:publish-subscribe-channel>

	<int:service-activator id="simpleEventActivator"
		input-channel="eventChannel"
		method="onEvent">
		<bean id="simpleEventListener" class="nh.examples.springintegration.order.domain.SimpleEventListener" />
	</int:service-activator>
	
	<!-- 
	<osgi:service interface="org.springframework.integration.core.SubscribableChannel" ref="commandChannel" >
		<osgi:service-properties>
			<entry key="channelName" value="commandChannel" />
		</osgi:service-properties>
	</osgi:service>
		 -->
	<osgi:service interface="org.springframework.integration.core.SubscribableChannel" ref="eventChannel" >
		<osgi:service-properties>
			<entry key="channelName" value="eventChannel" />
		</osgi:service-properties>
	</osgi:service>



<!--  
	<osgi:service interface="org.springframework.integration.core.SubscribableChannel" ref="queryChannel" >
		<osgi:service-properties>
			<entry key="channelName" value="queryChannel" />
		</osgi:service-properties>
	</osgi:service>
	<osgi:service interface="org.springframework.integration.core.SubscribableChannel" ref="queryResultChannel" >
		<osgi:service-properties>
			<entry key="channelName" value="queryResultChannel" />
		</osgi:service-properties>
	</osgi:service>	
	-->


		
</beans>
